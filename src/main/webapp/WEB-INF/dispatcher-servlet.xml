<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:jee="http://www.springframework.org/schema/jee"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd">

    <bean id="messageSource"
        class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages" />
        <property name="defaultEncoding" value="ISO-8859-1" />
    </bean>
    
    <!--active la configuration par annotations-->
    <context:component-scan base-package="com.developpez"/>
    <mvc:annotation-driven />
    
    <!-- Il faut que "InternalResourceViewResolver" se trouve après ces deux déclarations car Spring teste les "ViewResolver"
    	dans l'ordre de délcaration : on résout d'abord "UrlBasedViewResolver", puis "InternalResourceViewResolver" -->
    	
    <!-- "UrlBasedViewResolver" utilise "TilesView" pour traiter les vues -->
    <bean
    	class="org.springframework.web.servlet.view.UrlBasedViewResolver">
    		<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
    	</bean>
    
    <!-- "TilesConfigurer" charge la configuration dans /WEB-INF/tiles.xml -->
    <bean id="tilesConfigurer"
    	class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
    	<property name="definitions">
    		<list>
    			<value>/WEB-INF/tiles.xml</value>
    		</list>
    	</property>
    </bean>
    
     <!--  grâce à InternalResourceViewResolver-->
    <bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix">
            <value>/vues/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property>
    </bean>
    	
    <tx:annotation-driven transaction-manager="transactionManager" />
    
	<!-- Permet de déclarer l'utilisation de la ressource JDBC -->
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/jdbc/listecourses" />
    </bean>

	<!-- Utilise la ressource JDBC et le fichier persistence.xml pour créer le "EntityManager" utilisé dans la DAO-->
     <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
    </bean>

	<!-- Instancie le gestionnaire de transaction et associe la fabrique du "EntityManager" -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    
    <!-- Active les annotations de validation de formulaire -->
    <mvc:annotation-driven/>
    
</beans>